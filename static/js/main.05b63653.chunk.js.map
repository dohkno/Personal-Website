{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Projects.js","App.js","serviceWorker.js","index.js"],"names":["Header","this","props","data","name","occupation","city","description","address","networks","social","map","network","key","href","url","className","id","title","Component","About","profilepic","image","bio","resumeDownload","resumedownload","src","alt","target","Resume","education","school","degree","graduated","work","company","years","Projects","projects","projectImage","category","App","getResumeData","setState","resumeData","state","foo","main","resume","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.05b63653.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Header extends Component {\n    render() {\n        if(this.props.data){\n            var name = this.props.data.name\n            var occupation= this.props.data.occupation;\n            var description= this.props.data.description;\n            var city= this.props.data.address.city;\n            var networks = this.props.data.social.map((network) => {\n                return <li key={network.name}>\n                            <a href={network.url}>\n                                <i className={network.className}></i>\n                            </a>\n                        </li>\n            });\n        }\n        return (\n            <header id=\"home\">\n\n            <nav id=\"nav-wrap\">\n\n                <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n                <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">Hide navigation</a>\n\n                <ul id=\"nav\" className=\"nav\">\n                    <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n                    <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n                    <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\n                    <li><a className=\"smoothscroll\" href=\"#portfolio\">Projects</a></li>\n                </ul>\n\n            </nav>\n\n            <div className=\"row banner\">\n                <div className=\"banner-text\">\n                    <h1 className=\"responsive-headline\">I'm {name}.</h1>\n                    <h3>I'm a {city} based <span>{occupation}</span>.</h3>\n                    <hr />\n                    <ul className=\"social\">\n                    {networks}\n                    </ul>\n                </div>\n            </div>\n        </header>\n        )\n    }\n}\n\n","import React, { Component } from 'react'\n\nexport default class About extends Component {\n    \n\n    render() {\n        if(this.props.data){\n            var name = this.props.data.name;\n            var profilepic= \"images/\"+this.props.data.image;\n            var bio = this.props.data.bio;\n            var resumeDownload = this.props.data.resumedownload;\n        }\n        return (\n            <section id=\"about\">\n            <div className=\"row\">\n               <div className=\"three columns\">\n                  <img className=\"profile-pic\"  src={profilepic} alt=\"Jim Chiang Profile Pic\" />\n               </div>\n               <div className=\"nine columns main-col\">\n                  <h2>About Me</h2>\n      \n                  <p>{bio}</p>\n                  <div className=\"row\">\n\n                     <div className=\"columns download\">\n                        <p>\n                           <a href={resumeDownload} target=\"_blank\" className=\"button\"><i className=\"fa fa-download\"></i>Download Resume</a>\n                        </p>\n                     </div>\n                  </div>\n               </div>\n            </div>\n      \n         </section>\n        );\n    }\n}","import React, { Component } from 'react';\n\nclass Resume extends Component {\n    render() {\n        if(this.props.data){\n            var education = this.props.data.education.map((education) => {\n                return <div key={education.school}><h3>{education.school}</h3>\n                <p className=\"info\">{education.degree} <span>&bull;</span><em className=\"date\">{education.graduated}</em></p>\n                <p>{education.description}</p></div>\n            });\n            var work = this.props.data.work.map((work) => {\n                return <div key={work.company}><h3>{work.company}</h3>\n                    <p className=\"info\">{work.title}<span>&bull;</span> <em className=\"date\">{work.years}</em></p>\n                    <p>{work.description}</p>\n                </div>\n            });\n        }\n        return (\n            <section id=\"resume\">\n      \n            <div className=\"row education\">\n               <div className=\"three columns header-col\">\n                  <h1><span>Education</span></h1>\n               </div>\n      \n               <div className=\"nine columns main-col\">\n                  <div className=\"row item\">\n                     <div className=\"twelve columns\">\n                       {education}\n                     </div>\n                  </div>\n               </div>\n            </div>\n      \n      \n            <div className=\"row work\">\n      \n               <div className=\"three columns header-col\">\n                  <h1><span>Work</span></h1>\n               </div>\n      \n               <div className=\"nine columns main-col\">\n                {work}\n              </div>\n          </div>\n         </section>\n        );\n    }\n}\n\nexport default Resume;","import React, { Component } from 'react';\n\nclass Projects extends Component {\n  render() {\n\n    if(this.props.data){\n      var projects = this.props.data.map(function(projects){\n        var projectImage = 'images/'+projects.image;\n        return <div key={projects.title} className=\"columns portfolio-item\">\n           <div className=\"item-wrap\">\n            <a href={projects.url} title={projects.title}>\n               <img alt={projects.title} src={projectImage} />\n               <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                 <h5>{projects.title}</h5>\n                     <p>{projects.category}</p>\n                  </div>\n                </div>\n              <div className=\"link-icon\"><i className=\"fa fa-link\"></i></div>\n            </a>\n          </div>\n        </div>\n      })\n    }\n\n    return (\n      <section id=\"portfolio\">\n\n      <div className=\"row\">\n\n         <div className=\"twelve columns collapsed\">\n\n            <h1>My Projects</h1>\n\n            <div id=\"portfolio-wrapper\" className=\"bgrid-halves s-bgrid-halves cf\">\n                {projects}\n            </div>\n          </div>\n      </div>\n   </section>\n    );\n  }\n}\n\nexport default Projects;","import React, { Component } from 'react'\nimport './App.css';\nimport Header from './components/Header'\nimport About from './components/About';\nimport Resume from './components/Resume'\nimport Projects from './components/Projects'\nimport data from './data/resumeData.json'\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      foo: 'bar',\n      resumeData: {}\n    };\n  }\n\n  getResumeData = () =>{\n    this.setState({resumeData: data})\n  }\n\n  componentDidMount(){\n    this.getResumeData();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header data={this.state.resumeData.main}/>\n        <About data={this.state.resumeData.main}/>\n        <Resume data={this.state.resumeData.resume}/>\n        <Projects data={this.state.resumeData.projects}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}